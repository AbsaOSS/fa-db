/*
 * Copyright 2022 ABSA Group Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

CREATE TABLE runs.date_time_types (
                                     id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     offset_date_time TIMESTAMPTZ,
                                     instant TIMESTAMPTZ,
                                     zoned_date_time TIMESTAMPTZ,
                                     local_date_time TIMESTAMP,
                                     local_date DATE,
                                     local_time TIME,
                                     sql_date DATE,
                                     sql_time TIME,
                                     sql_timestamp TIMESTAMP,
                                     util_date TIMESTAMP
);

INSERT INTO runs.date_time_types (
  offset_date_time, instant, zoned_date_time, local_date_time, local_date, local_time,
  sql_date, sql_time, sql_timestamp, util_date
) VALUES (
  '2004-10-19 10:23:54+02',
  '2004-10-19 10:23:54+02',
  '2004-10-19 10:23:54+02',
  '2004-10-19 10:23:54',
  '2004-10-19',
  '10:23:54',
  '2004-10-19',
  '10:23:54',
  '2004-10-19 10:23:54',
  '2004-10-19 10:23:54'
);


CREATE OR REPLACE FUNCTION runs.get_all_date_time_types(p_id INT)
    RETURNS TABLE(
                     offset_date_time TIMESTAMPTZ,
                     instant TIMESTAMPTZ,
                     zoned_date_time TIMESTAMPTZ,
                     local_date_time TIMESTAMP,
                     local_date DATE,
                     local_time TIME,
                     sql_date DATE,
                     sql_time TIME,
                     sql_timestamp TIMESTAMP,
                     util_date TIMESTAMP
                 ) AS $$
BEGIN
    RETURN QUERY SELECT
                     T.offset_date_time,
                     T.instant,
                     T.zoned_date_time,
                     T.local_date_time,
                     T.local_date,
                     T.local_time,
                     T.sql_date,
                     T.sql_time,
                     T.sql_timestamp,
                     T.util_date
                 FROM runs.date_time_types T limit p_id;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION runs.insert_dates_times(
    IN p_offset_date_time TIMESTAMPTZ,
    IN p_instant TIMESTAMPTZ,
    IN p_zoned_date_time TIMESTAMPTZ,
    IN p_local_date_time TIMESTAMP,
    IN p_local_date DATE,
    IN p_local_time TIME,
    IN p_sql_date DATE,
    IN p_sql_time TIME,
    IN p_sql_timestamp TIMESTAMP,
    IN p_util_date DATE,
    OUT status INTEGER,
    OUT status_text TEXT,
    OUT o_id INTEGER
) RETURNS record AS $$
BEGIN
    INSERT INTO runs.date_time_types (
        offset_date_time,
        instant,
        zoned_date_time,
        local_date_time,
        local_date,
        local_time,
        sql_date,
        sql_time,
        sql_timestamp,
        util_date
    ) VALUES (
                 p_offset_date_time,
                 p_instant,
                 p_zoned_date_time,
                 p_local_date_time,
                 p_local_date,
                 p_local_time,
                 p_sql_date,
                 p_sql_time,
                 p_sql_timestamp,
                 p_util_date
             ) RETURNING id INTO o_id;

    status := 11;
    status_text := 'OK';

    RETURN;
END;
$$ LANGUAGE plpgsql;
